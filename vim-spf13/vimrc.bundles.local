" do not chdir when opening a new buffer
"let g:spf13_no_autochdir = 1

" use default leader '\'
let g:spf13_leader='\'

" specify the groups of bundles in use
let g:spf13_bundle_groups=['general', 'neocomplcache', 'programming', 'python', 'javascript', 'html', 'misc']

" To override all the included bundles, put
let g:override_spf13_bundles = 1
" in your .vimrc.bundles.local file"
"
" General
if count(g:spf13_bundle_groups, 'general')
    Bundle 'scrooloose/nerdtree'
    Bundle 'altercation/vim-colors-solarized'
    Bundle 'spf13/vim-colors'
    Bundle 'tpope/vim-surround'
    Bundle 'spf13/vim-autoclose'
    Bundle 'kien/ctrlp.vim'
    Bundle 'vim-scripts/sessionman.vim'
    Bundle 'matchit.zip'
    Bundle 'Lokaltog/vim-powerline'
    Bundle 'Lokaltog/vim-easymotion'
    Bundle 'godlygeek/csapprox'
    Bundle 'jistr/vim-nerdtree-tabs'
    Bundle 'flazz/vim-colorschemes'
    Bundle 'mbbill/undotree'
    Bundle 'myusuf3/numbers.vim'
    "Bundle 'nathanaelkane/vim-indent-guides'
    if !exists('g:spf13_no_views')
        Bundle 'vim-scripts/restore_view.vim'
    endif
    Bundle 'airblade/vim-gitgutter'
    "Bundle 'tpope/vim-abolish.git'
endif

" General Programming
if count(g:spf13_bundle_groups, 'programming')
    " Pick one of the checksyntax, jslint, or syntastic
    "Bundle 'scrooloose/syntastic'
    Bundle 'tpope/vim-fugitive'
    Bundle 'mattn/webapi-vim'
    "Bundle 'mattn/gist-vim'
    Bundle 'scrooloose/nerdcommenter'
    Bundle 'godlygeek/tabular'
    if executable('ctags')
        Bundle 'majutsushi/tagbar'
    endif
endif

" Snippets & AutoComplete
if count(g:spf13_bundle_groups, 'snipmate')
    Bundle 'garbas/vim-snipmate'
    Bundle 'honza/vim-snippets'
    " Source support_function.vim to support vim-snippets.
    if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
        source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
    endif
elseif count(g:spf13_bundle_groups, 'neocomplcache')
    Bundle 'Shougo/neocomplcache'
    Bundle 'Shougo/neosnippet'
    Bundle 'honza/vim-snippets'
endif

" PHP
if count(g:spf13_bundle_groups, 'php')
    Bundle 'spf13/PIV'
    Bundle 'arnaud-lb/vim-php-namespace'
endif

" Python
if count(g:spf13_bundle_groups, 'python')
    " Pick either python-mode or pyflakes & pydoc
    "Bundle 'kevinw/pyflakes-vim'
    Bundle 'fs111/pydoc.vim'
    Bundle 'nvie/vim-flake8'
    "Bundle 'klen/python-mode'
    Bundle 'python.vim'
    "Bundle 'python_match.vim'
    "Bundle 'pythoncomplete'
endif

" Javascript
if count(g:spf13_bundle_groups, 'javascript')
    Bundle 'leshill/vim-json'
    Bundle 'groenewege/vim-less'
    Bundle 'pangloss/vim-javascript'
    Bundle 'briancollins/vim-jst'
    Bundle 'kchmck/vim-coffee-script'
endif

" Java
if count(g:spf13_bundle_groups, 'scala')
    Bundle 'derekwyatt/vim-scala'
    Bundle 'derekwyatt/vim-sbt'
endif

" HTML
if count(g:spf13_bundle_groups, 'html')
    Bundle 'amirh/HTML-AutoCloseTag'
    Bundle 'hail2u/vim-css3-syntax'
    Bundle 'tpope/vim-haml'
endif

" Ruby
if count(g:spf13_bundle_groups, 'ruby')
    Bundle 'tpope/vim-rails'
    let g:rubycomplete_buffer_loading = 1
    "let g:rubycomplete_classes_in_global = 1
    "let g:rubycomplete_rails = 1
endif

" Go Lang
if count(g:spf13_bundle_groups, 'go')
    Bundle 'jnwhiteh/vim-golang'
    Bundle 'spf13/vim-gocode'
endif

" Misc
if count(g:spf13_bundle_groups, 'misc')
    Bundle 'tpope/vim-markdown'
    "Bundle 'spf13/vim-preview'
    "Bundle 'tpope/vim-cucumber'
    "Bundle 'quentindecock/vim-cucumber-align-pipes'
    "Bundle 'Puppet-Syntax-Highlighting'
endif


" Twig
if count(g:spf13_bundle_groups, 'twig')
    Bundle 'beyondwords/vim-twig'
endif
" }

" more bundles
Bundle 'vim-scripts/YankRing.vim'
Bundle 'rbgrouleff/bclose.vim'
Bundle 'vim-scripts/bufexplorer.zip'
Bundle 'milkypostman/vim-togglelist'
Bundle 'davidhalter/jedi-vim'
